<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE entry SYSTEM "SamplesInfo.dtd">
<entry>
  <name>simpleVulkan</name>
  <cflags>
    <flag>--std=c++11</flag>
  </cflags>
  <cuda_api_list>
    <toolkit>cudaStreamCreateWithFlags</toolkit>
    <toolkit>cudaExternalMemoryGetMappedBuffer</toolkit>
    <toolkit>cudaSignalSemaphore</toolkit>
    <toolkit>cudaWaitExternalSemaphoresAsync</toolkit>
    <toolkit>cudaVertMem</toolkit>
    <toolkit>cudaImportExternalSemaphore</toolkit>
    <toolkit>cudaWaitSemaphore</toolkit>
    <toolkit>cudaHeightMap</toolkit>
    <toolkit>cudaSetDevice</toolkit>
    <toolkit>cudaGetDeviceCount</toolkit>
    <toolkit>cudaSignalExternalSemaphoresAsync</toolkit>
    <toolkit>cudaTimelineSemaphore</toolkit>
    <toolkit>cudaStreamSynchronize</toolkit>
    <toolkit>cudaDestroyExternalMemory</toolkit>
    <toolkit>cudaOccupancyMaxActiveBlocksPerMultiprocessor</toolkit>
    <toolkit>cudaImportExternalMemory</toolkit>
    <toolkit>cudaGetDeviceProperties</toolkit>
    <toolkit>cudaDestroyExternalSemaphore</toolkit>
  </cuda_api_list>
  <description><![CDATA[This sample demonstrates Vulkan CUDA Interop. CUDA imports the Vulkan vertex buffer and operates on it to create sinewave, and synchronizes with Vulkan through vulkan semaphores imported by CUDA. This sample depends on Vulkan SDK, GLFW3 libraries, for building this sample please refer to "Build_instructions.txt" provided in this sample's directory]]></description>
  <devicecompilation>whole</devicecompilation>
  <files>
    <file>sinewave.vert</file>
    <file>sinewave.frag</file>
  </files>
  <includepaths>
    <path>./</path>
    <path>../</path>
    <path>../../../Common</path>
  </includepaths>
  <keyconcepts>
    <concept level="advanced">Graphics Interop</concept>
    <concept level="advanced">CUDA Vulkan Interop</concept>
    <concept level="advanced">Data Parallel Algorithms</concept>
  </keyconcepts>
  <keywords>
    <keyword>CUDA</keyword>
    <keyword>CPP11</keyword>
    <keyword>sine-wave</keyword>
    <keyword>Vulkan</keyword>
  </keywords>
  <libraries>
  </libraries>
  <librarypaths>
  </librarypaths>
  <nsight_eclipse>true</nsight_eclipse>
  <primary_file>main.cpp</primary_file>
  <required_dependencies>
    <dependency>X11</dependency>
    <dependency>VULKAN</dependency>
  </required_dependencies>
  <scopes>
    <scope>2:Graphics Interop</scope>
    <scope>1:CUDA Advanced Topics</scope>
    <scope>1:CUDA Vulkan Interop</scope>
  </scopes>
  <sm-arch>sm50</sm-arch>
  <sm-arch>sm52</sm-arch>
  <sm-arch>sm53</sm-arch>
  <sm-arch>sm60</sm-arch>
  <sm-arch>sm61</sm-arch>
  <sm-arch>sm70</sm-arch>
  <sm-arch>sm72</sm-arch>
  <sm-arch>sm75</sm-arch>
  <sm-arch>sm80</sm-arch>
  <sm-arch>sm86</sm-arch>
  <sm-arch>sm87</sm-arch>
  <sm-arch>sm89</sm-arch>
  <sm-arch>sm90</sm-arch>
  <supported_envs>
    <env>
      <arch>x86_64</arch>
      <platform>linux</platform>
    </env>
    <env>
      <platform>windows7</platform>
    </env>
    <env>
      <platform>aarch64</platform>
    </env>
    <env>
      <platform>sbsa</platform>
    </env>
  </supported_envs>
  <supported_sm_architectures>
    <include>all</include>
  </supported_sm_architectures>
  <title>Vulkan CUDA Interop Sinewave</title>
  <type>exe</type>
</entry>
