<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE entry SYSTEM "SamplesInfo.dtd">
<entry>
  <name>conjugateGradientCudaGraphs</name>
  <cuda_api_list>
    <toolkit>cudaGraphInstantiate</toolkit>
    <toolkit>cudaStreamDestroy</toolkit>
    <toolkit>cudaStreamBeginCapture</toolkit>
    <toolkit>cudaFree</toolkit>
    <toolkit>cudaMallocHost</toolkit>
    <toolkit>cudaStreamEndCapture</toolkit>
    <toolkit>cudaGraphDestroy</toolkit>
    <toolkit>cudaFreeHost</toolkit>
    <toolkit>cudaGraphLaunch</toolkit>
    <toolkit>cudaStreamCreate</toolkit>
    <toolkit>cudaStreamSynchronize</toolkit>
    <toolkit>cudaOccupancyMaxPotentialBlockSize</toolkit>
    <toolkit>cudaMalloc</toolkit>
    <toolkit>cudaMemcpyAsync</toolkit>
    <toolkit>cudaMemsetAsync</toolkit>
    <toolkit>cudaGetDeviceProperties</toolkit>
    <toolkit>cudaGraphExecDestroy</toolkit>
  </cuda_api_list>
  <description><![CDATA[This sample implements a conjugate gradient solver on GPU using CUBLAS and CUSPARSE library calls captured and called using CUDA Graph APIs.]]></description>
  <devicecompilation>whole</devicecompilation>
  <includepaths>
    <path>./</path>
    <path>../</path>
    <path>../../../Common</path>
  </includepaths>
  <keyconcepts>
    <concept level="advanced">Linear Algebra</concept>
    <concept level="advanced">CUBLAS Library</concept>
    <concept level="advanced">CUSPARSE Library</concept>
  </keyconcepts>
  <keywords>
    <keyword>CUDA</keyword>
    <keyword>CUBLAS</keyword>
    <keyword>CUSPARSE</keyword>
    <keyword>Sparse Matrix</keyword>
  </keywords>
  <libraries>
    <library>cublas_static</library>
    <library>cublasLt_static</library>
    <library>cusparse_static</library>
    <library>culibos</library>
  </libraries>
  <librarypaths>
  </librarypaths>
  <nsight_eclipse>true</nsight_eclipse>
  <primary_file>conjugateGradientCudaGraphs.cu</primary_file>
  <required_dependencies>
    <dependency>CUBLAS</dependency>
    <dependency>CUSPARSE</dependency>
  </required_dependencies>
  <scopes>
    <scope>1:CUDA Advanced Topics</scope>
    <scope>3:Linear Algebra</scope>
    <scope>1:CUDA Graphs</scope>
  </scopes>
  <sm-arch>sm50</sm-arch>
  <sm-arch>sm52</sm-arch>
  <sm-arch>sm53</sm-arch>
  <sm-arch>sm60</sm-arch>
  <sm-arch>sm61</sm-arch>
  <sm-arch>sm70</sm-arch>
  <sm-arch>sm72</sm-arch>
  <sm-arch>sm75</sm-arch>
  <sm-arch>sm80</sm-arch>
  <sm-arch>sm86</sm-arch>
  <sm-arch>sm87</sm-arch>
  <sm-arch>sm89</sm-arch>
  <sm-arch>sm90</sm-arch>
  <supported_envs>
    <env>
      <arch>x86_64</arch>
      <platform>linux</platform>
    </env>
    <env>
      <platform>windows7</platform>
    </env>
    <env>
      <arch>x86_64</arch>
      <platform>macosx</platform>
    </env>
    <env>
      <arch>arm</arch>
    </env>
    <env>
      <arch>sbsa</arch>
    </env>
    <env>
      <arch>ppc64le</arch>
      <platform>linux</platform>
    </env>
  </supported_envs>
  <supported_sm_architectures>
    <include>all</include>
  </supported_sm_architectures>
  <title>Conjugate Gradient using Cuda Graphs</title>
  <type>exe</type>
</entry>
