<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE entry SYSTEM "SamplesInfo.dtd">
<entry>
  <name>cudaNvSciNvMedia</name>
  <cflags>
    <flag>--std=c++11</flag>
  </cflags>
  <cuda_api_list>
    <driver>cuDeviceGetUuid</driver>
    <toolkit>cudaImportExternalSemaphore</toolkit>
    <toolkit>cudaGetMipmappedArrayLevel</toolkit>
    <toolkit>cudaSetDevice</toolkit>
    <toolkit>cudaDestroySurfaceObject</toolkit>
    <toolkit>cudaCreateSurfaceObject</toolkit>
    <toolkit>cudaImportNvSciImage</toolkit>
    <toolkit>cudaCreateChannelDesc</toolkit>
    <toolkit>cudaMallocHost</toolkit>
    <toolkit>cudaSignalExternalSemaphoresAsync</toolkit>
    <toolkit>cudaFreeHost</toolkit>
    <toolkit>cudaMemcpyAsync</toolkit>
    <toolkit>cudaStreamCreateWithFlags</toolkit>
    <toolkit>cudaExternalMemoryGetMappedMipmappedArray</toolkit>
    <toolkit>cudaMallocArray</toolkit>
    <toolkit>cudaFreeArray</toolkit>
    <toolkit>cudaStreamDestroy</toolkit>
    <toolkit>cudaDeviceGetNvSciSyncAttributes</toolkit>
    <toolkit>cudaDestroyExternalMemory</toolkit>
    <toolkit>cudaImportExternalMemory</toolkit>
    <toolkit>cudaDestroyExternalSemaphore</toolkit>
    <toolkit>cudaFreeMipmappedArray</toolkit>
    <toolkit>cudaImportNvSciSync</toolkit>
    <toolkit>cudaFree</toolkit>
    <toolkit>cudaStreamSynchronize</toolkit>
    <toolkit>cudaMalloc</toolkit>
    <toolkit>cudaWaitExternalSemaphoresAsync</toolkit>
  </cuda_api_list>
  <description><![CDATA[This sample demonstrates CUDA-NvMedia interop via NvSciBuf/NvSciSync APIs. Note that this sample only supports cross build from x86_64 to aarch64, aarch64 native build is not supported. For detailed workflow of the sample please check cudaNvSciNvMedia_Readme.pdf in the sample directory.]]></description>
  <devicecompilation>whole</devicecompilation>
  <includepaths>
    <path>./</path>
    <path>../</path>
    <path>../../../Common</path>
  </includepaths>
  <keyconcepts>
    <concept level="basic">CUDA NvSci Interop</concept>
    <concept level="advanced">Data Parallel Algorithms</concept>
    <concept level="advanced">Image Processing</concept>
  </keyconcepts>
  <keywords>
    <keyword>CUDA</keyword>
    <keyword>CPP11</keyword>
  </keywords>
  <libraries>
    <library os="linux">cuda</library>
    <library framework="true" os="macosx">CUDA</library>
    <library>nvscibuf</library>
    <library>nvscisync</library>
    <library>nvmedia</library>
  </libraries>
  <librarypaths>
  </librarypaths>
  <nsight_eclipse>true</nsight_eclipse>
  <primary_file>main.cpp</primary_file>
  <required_dependencies>
    <dependency>NVSCI</dependency>
    <dependency>NvMedia</dependency>
  </required_dependencies>
  <scopes>
    <scope>1:CUDA Advanced Topics</scope>
    <scope>1:CUDA NvSciBuf/NvSciSync Interop</scope>
  </scopes>
  <sm-arch>sm60</sm-arch>
  <sm-arch>sm61</sm-arch>
  <sm-arch>sm70</sm-arch>
  <sm-arch>sm72</sm-arch>
  <sm-arch>sm75</sm-arch>
  <sm-arch>sm80</sm-arch>
  <sm-arch>sm86</sm-arch>
  <sm-arch>sm87</sm-arch>
  <sm-arch>sm89</sm-arch>
  <sm-arch>sm90</sm-arch>
  <supported_envs>
    <env>
      <arch>aarch64</arch>
      <platform>linux</platform>
    </env>
    <env>
      <arch>aarch64</arch>
      <platform>qnx</platform>
    </env>
  </supported_envs>
  <supported_sm_architectures>
    <from>6.0</from>
  </supported_sm_architectures>
  <title>NvMedia CUDA Interop</title>
  <type>exe</type>
</entry>
